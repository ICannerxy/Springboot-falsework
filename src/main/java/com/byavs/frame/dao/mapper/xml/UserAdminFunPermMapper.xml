<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byavs.frame.dao.mapper.UserAdminFunPermMapper">
  <cache>
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
  </cache>
  <resultMap id="BaseResultMap" type="com.byavs.frame.dao.model.UserAdminFunPerm">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="fun_id" jdbcType="VARCHAR" property="funId" />
    <result column="permission_id" jdbcType="VARCHAR" property="permissionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    id, owner_id, create_time, creator, creator_id, fun_id, permission_id
  </sql>
  <select id="selectByExample" parameterType="com.byavs.frame.dao.model.UserAdminFunPermExample" resultMap="BaseResultMap">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_admin_fun_perm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    select 
    <include refid="Base_Column_List" />
    from user_admin_fun_perm
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    delete from user_admin_fun_perm
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.byavs.frame.dao.model.UserAdminFunPermExample">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    delete from user_admin_fun_perm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.byavs.frame.dao.model.UserAdminFunPerm">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    insert into user_admin_fun_perm (id, owner_id, create_time, 
      creator, creator_id, fun_id, 
      permission_id)
    values (#{id,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR}, #{funId,jdbcType=VARCHAR}, 
      #{permissionId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.byavs.frame.dao.model.UserAdminFunPerm">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    insert into user_admin_fun_perm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="funId != null">
        fun_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="funId != null">
        #{funId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.byavs.frame.dao.model.UserAdminFunPermExample" resultType="java.lang.Long">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    select count(*) from user_admin_fun_perm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    update user_admin_fun_perm
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.funId != null">
        fun_id = #{record.funId,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionId != null">
        permission_id = #{record.permissionId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    update user_admin_fun_perm
    set id = #{record.id,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=VARCHAR},
      fun_id = #{record.funId,jdbcType=VARCHAR},
      permission_id = #{record.permissionId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.byavs.frame.dao.model.UserAdminFunPerm">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    update user_admin_fun_perm
    <set>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="funId != null">
        fun_id = #{funId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byavs.frame.dao.model.UserAdminFunPerm">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    update user_admin_fun_perm
    set owner_id = #{ownerId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=VARCHAR},
      fun_id = #{funId,jdbcType=VARCHAR},
      permission_id = #{permissionId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    <!-- @mbg.generated 2019/03/21 11:10:25.-->
    insert into user_admin_fun_perm (id, owner_id, create_time, 
      creator, creator_id, fun_id, 
      permission_id)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.ownerId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.creator,jdbcType=VARCHAR}, #{item.creatorId,jdbcType=VARCHAR}, #{item.funId,jdbcType=VARCHAR}, 
        #{item.permissionId,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>